--- orig/src/ehbigint-log.h
--- tidy/src/ehbigint-log.h
@@ -15,9 +15,11 @@ License for more details.
 #ifndef EHBIGINT_LOG_H
 #define EHBIGINT_LOG_H
 
+/*
 #ifdef __cplusplus
 extern "C" {
 #endif
+*/
 
 #include "ehbigint.h"		/* struct ehbigint */
 #include <stdio.h>		/* FILE */
@@ -72,8 +74,10 @@ void ehbi_log_backtrace(FILE *log);
  ehbi_log_backtrace(ehbi_log_file())
 #endif
 
+/*
 #ifdef __cplusplus
 }
 #endif
+*/
 
 #endif /* EHBIGINT_LOG_H */
--- orig/src/ehbigint-str.h
--- tidy/src/ehbigint-str.h
@@ -15,17 +15,21 @@ License for more details.
 #ifndef EHBIGINT_STR_H
 #define EHBIGINT_STR_H
 
+/*
 #ifdef __cplusplus
 extern "C" {
 #endif
+*/
 
 #include "ehbigint.h"
 
 int ehbi_byte_to_hex_chars(unsigned char byte, char *high, char *low);
 int ehbi_hex_chars_to_byte(char high, char low, unsigned char *byte);
 
+/*
 #ifdef __cplusplus
 }
 #endif
+*/
 
 #endif /* EHBIGINT_STR_H */
--- orig/src/ehbigint-util.h
--- tidy/src/ehbigint-util.h
@@ -15,9 +15,11 @@ License for more details.
 #ifndef EHBIGINT_UTIL_H
 #define EHBIGINT_UTIL_H
 
+/*
 #ifdef __cplusplus
 extern "C" {
 #endif
+*/
 
 #ifdef EHBI_NO_ALLOCA
 void ehbi_do_stack_free(void *ptr, size_t size);
@@ -32,8 +34,10 @@ void ehbi_no_stack_free(void *ptr, size_t size);
 #define ehbi_stack_free ehbi_no_stack_free
 #endif
 
+/*
 #ifdef __cplusplus
 }
 #endif
+*/
 
 #endif /* EHBIGINT_UTIL_H */
--- orig/src/ehbigint.h
--- tidy/src/ehbigint.h
@@ -15,9 +15,11 @@ License for more details.
 #ifndef EHBIGINT_H
 #define EHBIGINT_H
 
+/*
 #ifdef __cplusplus
 extern "C" {
 #endif
+*/
 
 #include <stddef.h>		/* size_t */
 
@@ -193,8 +195,10 @@ enum {
 	EHBI_LAST
 };
 
+/*
 #ifdef __cplusplus
 }
 #endif
+*/
 
 #endif /* EHBIGINT_H */
--- orig/tests/echeck.h
--- tidy/tests/echeck.h
@@ -16,9 +16,11 @@ License for more details.
 #ifndef ECHECK_H
 #define ECHECK_H
 
+/*
 #ifdef __cplusplus
 extern "C" {
 #endif
+*/
 
 #include <stdlib.h>		/* for size_t */
 #include <stdio.h>		/* for FILE */
@@ -238,7 +240,10 @@ char echeck_status_m(FILE *err, const char *func, const char *file,
 #define check_status(val)\
 	echeck_status_m(stderr, ECHECK_FUNC, __FILE__, __LINE__, val, NULL)
 
+/*
 #ifdef __cplusplus
 }
 #endif
+*/
+
 #endif /* ECHECK_H */
